name: Build, Test, and Deploy

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Generate FirebaseConfig.ts
        working-directory: ./Chemorization-App
        run: |
          cat > FirebaseConfig.ts << EOL
          import { initializeApp } from "firebase/app";
          import { getAuth } from "firebase/auth";

          const firebaseConfig = {
            apiKey: "${{ secrets.FIREBASE_API_KEY }}",
            authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
            projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
            storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
            messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
            appId: "${{ secrets.FIREBASE_APP_ID }}"
          };

          const app = initializeApp(firebaseConfig);

          export const auth = getAuth(app);
          EOL

      - name: Install dependencies
        working-directory: ./Chemorization-App
        run: npm install

      - name: Run unit tests
        working-directory: ./Chemorization-App
        run: npm test

      # - name: Install EAS CLI and Publish with EAS Update
      #   working-directory: ./Chemorization-App
      #   env:
      #     CI: true
      #   run: |
      #     npm install -g eas-cli
      #     eas update --non-interactive --branch main --message "Automated CI deploy"
